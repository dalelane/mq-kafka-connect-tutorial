apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  name: eventstreams
  namespace: kafka
spec:
  license:
    accept: true
    use: CloudPakForIntegrationProduction
  requestIbmServices:
    iam: true
    monitoring: true
  strimziOverrides:
    kafka:
      authorization:
        authorizerClass: com.ibm.eventstreams.runas.authorizer.RunAsAuthorizer
        supportsAdminApi: true
        type: custom
      config:
        num.network.threads: 9
        inter.broker.protocol.version: '3.2'
        log.cleaner.threads: 6
        num.io.threads: 24
        num.replica.fetchers: 3
        min.insync.replicas: 2
        log.message.format.version: '3.2'
        offsets.topic.replication.factor: 3
        default.replication.factor: 3
      listeners:
        - authentication:
            type: scram-sha-512
          name: external
          port: 9094
          tls: true
          type: route
        - authentication:
            type: scram-sha-512
          name: internal
          port: 9093
          tls: true
          type: internal
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: metrics-config
      replicas: 3
      storage:
        class: ibmc-file-gold-gid
        size: 20Gi
        type: persistent-claim
    zookeeper:
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: metrics-config
      replicas: 3
      storage:
        class: ibmc-file-gold-gid
        size: 2Gi
        type: persistent-claim
    entityOperator:
      topicOperator: {}
      userOperator: {}
  adminUI: {}
  restProducer: {}
  apicurioRegistry: {}
  adminApi: {}
  collector: {}
  version: 11.0.2
